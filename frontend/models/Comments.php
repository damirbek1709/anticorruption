<?php

namespace frontend\models;
use yii\db\ActiveRecord;
use yii\behaviors\AttributeBehavior;

use Yii;
use frontend\models\Report;
use frontend\models\News;
use frontend\models\Authority;

/**
 * This is the model class for table "comments".
 *
 * @property integer $id
 * @property string $name
 * @property string $title
 * @property string $date
 * @property string $email
 * @property string $text
 */
class Comments extends \yii\db\ActiveRecord
{
    public $material;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'comments';
    }

    public function behaviors()
    {
        return [
            [
                'class' => AttributeBehavior::className(),
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => 'date', // update 1 attribute 'created' OR multiple attribute ['created','updated']
                    ActiveRecord::EVENT_BEFORE_UPDATE => 'date', // update 1 attribute 'created' OR multiple attribute ['created','updated']
                ],
                'value' => function ($event) {
                    return date('Y-m-d H:i:s', strtotime($this->date));
                },
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'email', 'text'], 'required'],
            [['email'], 'email'],
            [['date','news_id','category_id','report_id'], 'safe'],
            [['text'], 'string'],
            [['name', 'email'], 'string', 'max' => 255],
        ];
    }

    public function getReport(){
        return $this->hasOne(Report::className(), ['id' => 'report_id']);
    }
    public function getNews(){
        return $this->hasOne(News::className(), ['id' => 'news_id']);
    }
    public function getAuthority(){
        return $this->hasOne(Authority::className(), ['id' => 'category_id']);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Имя автора'),
            'date' => Yii::t('app', 'Дата'),
            'email' => Yii::t('app', 'E-mail'),
            'text' => Yii::t('app', 'Текст'),
            'material'=>'Материал'
        ];
    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord){
            $this->date = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
